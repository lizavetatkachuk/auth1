
@{
    ViewBag.Title = "OrderDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
    .w3-sidebar a {
        font-family: "Roboto", sans-serif
    }

    body, h1, h2, h3, h4, h5, h6, .w3-wide {
        font-family: "Montserrat", sans-serif;
    }
</style>

@section Scripts {
    <script type="text/javascript" src="@Url.Content("~/Scripts/knockout-2.1.0.js")"></script>
    <script type="text/javascript">
        function AppViewModel() {
            var self = this;
            self.loggedIn = @(Request.IsAuthenticated ? "true" : "false");
            self.products = ko.observableArray();
            self.cart = ko.observableArray();
            self.orders = ko.observableArray();
            self.details = ko.observable();

            function ProductViewModel(root, product) {
                var self = this;
                self.ProductId = product.Id;
                self.Name = product.Name;
                self.Price = product.Price;
                self.Quantity = ko.observable(0);

                self.addItemToCart = function () {
                    var qty = self.Quantity();
                    if (qty == 0) {
                        root.cart.push(self);
                    }
                    self.Quantity(qty + 1);
                };

                self.removeAllFromCart = function () {
                    self.Quantity(0);
                    root.cart.remove(self);
                };
            }
            function OrderDetailsViewModel(order) {
                var self = this;
                self.items = ko.observableArray();
                self.Id = order.Id;

                self.total = ko.computed(function () {
                    var sum = 0;
                    $.each(self.items(), function (index, item) {
                        sum += item.Price * item.Quantity;
                    });
                    return '$' + sum.toFixed(2);
                });

                $.getJSON("/api/orders/" + order.Id, function (order) {
                    $.each(order.Details, function (index, item) {
                        self.items.push(item);
                    })
                });
            };

            self.resetCart = function () {
                var items = self.cart.removeAll();
                $.each(items, function (index, product) {
                    product.Quantity(0);
                });
            }

            self.getDetails = function (order) {
                self.details(new OrderDetailsViewModel(order));
            }

            self.createOrder = function () {
                var jqxhr = $.ajax({
                    type: 'POST',
                    url: "api/orders",
                    contentType: 'application/json; charset=utf-8',
                    data: ko.toJSON({ Details: self.cart }),
                    dataType: "json",
                    success: function (newOrder) {
                        self.resetCart();
                        self.orders.push(newOrder);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        self.errorMessage(errorThrown);
                    }
                });
            };
            $.getJSON("/api/products", function (products) {
                $.each(products, function (index, product) {
                    self.products.push(new ProductViewModel(self, product));
                })
            });

            $.getJSON("api/orders", self.orders);
        }

    $(document).ready(function () {
        ko.applyBindings(new AppViewModel());
    });

    </script>
    }
    <div id="order-details" class="float-right" data-bind="if: details()">
        <h2>Order #<span data-bind="text: details().Id"></span></h2>
        <table class="details ui-widget-content">
            <thead>
                <tr><td>Item</td><td>Price</td><td>Quantity</td><td>Subtotal</td></tr>
            </thead>
            <tbody data-bind="foreach: details().items">
                <tr>
                    <td><span data-bind="text: $data.Product"></span></td>
                    <td><span data-bind="text: $data.Price"></span></td>
                    <td><span data-bind="text: $data.Quantity"></span></td>
                    <td>
                        <span data-bind="text: ($data.Price * $data.Quantity).toFixed(2)"></span>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>Total: <span data-bind="text: details().total"></span></p>
    </div>

